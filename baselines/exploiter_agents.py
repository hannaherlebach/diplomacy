from experiments import agent

class Agent(ABC):
    """Base agent class."""

    def __init__(self, **_):
        """Base init to ignore unused kwargs."""

    def __repr__(self) -> str:
        """Return a string representation of the agent."""
        raise NotImplementedError

    @abstractmethod
    def respond(
        self,
        power: Power,
        game: Game,
        message_summary_history: MessageSummaryHistory,
        possible_orders: dict[str, list[str]],
        current_message_round: int,
        max_message_rounds: int,
        final_game_year: int,
        prompt_ablations: list[PromptAblation],
    ) -> AgentResponse:
        """Prompt the model for a response."""

class NoPressAgent(Agent):
    def respond(
        self,
        power: Power,
        game: Game,
        message_summary_history: MessageSummaryHistory,
        possible_orders: dict[str, list[str]],
        current_message_round: int,
        max_message_rounds: int,
        final_game_year: int,
        prompt_ablations: list[PromptAblation],
    ) -> AgentResponse:
        """Prompt the model for a response."""
        
        # get switch policy
